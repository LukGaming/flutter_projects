// Mocks generated by Mockito 5.4.4 from annotations
// in object_box/test/unit/todos_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:object_box/domain/entities/todo.dart' as _i3;
import 'package:object_box/infrastructure/repositories/todo_repository.dart'
    as _i4;
import 'package:objectbox/objectbox.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBox_0<T> extends _i1.SmartFake implements _i2.Box<T> {
  _FakeBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTodo_1 extends _i1.SmartFake implements _i3.Todo {
  _FakeTodo_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TodoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRepository extends _i1.Mock implements _i4.TodoRepository {
  MockTodoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Box<_i3.Todo> get todoBox => (super.noSuchMethod(
        Invocation.getter(#todoBox),
        returnValue: _FakeBox_0<_i3.Todo>(
          this,
          Invocation.getter(#todoBox),
        ),
      ) as _i2.Box<_i3.Todo>);

  @override
  _i5.Future<void> delete(_i3.Todo? todo) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [todo],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.Todo>> get() => (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
        ),
        returnValue: _i5.Future<List<_i3.Todo>>.value(<_i3.Todo>[]),
      ) as _i5.Future<List<_i3.Todo>>);

  @override
  _i5.Future<_i3.Todo> save(_i3.Todo? todo) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [todo],
        ),
        returnValue: _i5.Future<_i3.Todo>.value(_FakeTodo_1(
          this,
          Invocation.method(
            #save,
            [todo],
          ),
        )),
      ) as _i5.Future<_i3.Todo>);
}
